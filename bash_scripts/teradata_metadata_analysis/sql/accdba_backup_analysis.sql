-- Variable Replacement List
-- MY_RUN_ID
-- MY_REL_NAME
-- MY_NUID
-- MY_USER_VIEW
-- MY_EP_VIEW
-- MY_EP_VIEW1
-- MY_EP_VIEW2
-- MY_MATVIEW_DB1
-- MY_MATVIEW_DB2
-- MY_REPORT_DB
-- MY_STAGE_DB


DELETE FROM CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST WHERE RUN_ID = MY_RUN_ID;

INSERT INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST
SELECT MY_RUN_ID, A.BKUP_TABNAME AS SOURCE_TABLE, NULL
FROM  CLARITY_DBA_MAINT.UPG_BKUP_ANALYSIS A
WHERE NOT EXISTS
(
SELECT  C.UPG_TABLE_NAME AS SOURCE_TABLE, NULL
FROM CLARITY_DBA_MAINT.UPG_CHG_LIST C
WHERE C.CHANGE_TYPE = 'Table Add' AND TRIM(A.BKUP_TABNAME)=TRIM(C.UPG_TABLE_NAME)
)
UNION
SELECT MY_RUN_ID, C.UPG_TABLE_NAME AS SOURCE_TABLE, NULL
FROM CLARITY_DBA_MAINT.UPG_CHG_LIST C
WHERE C.CHANGE_TYPE <> 'Table Add';

COLLECT STATISTICS ON CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST;

MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_USER_VIEW'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;

MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_EP_VIEW'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_EP_VIEW1'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_EP_VIEW2'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_REPORT_DB'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_MATVIEW_DB1'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_MATVIEW_DB2'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


MERGE INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST T1
USING (
SELECT TRIM(TableName) TableName, TRIM(DatabaseName) DatabaseName
FROM DBC.Tables T2 WHERE TRIM(T2.DatabaseName)='MY_STAGE_DB'
) dbc_rows
ON ( dbc_rows.TableName=T1.SRC_TABNAME AND T1.RUN_ID=MY_RUN_ID AND T1.SRC_DBNAME IS NULL)
WHEN MATCHED THEN
UPDATE SET SRC_DBNAME=dbc_rows.DatabaseName;


-- Check all TPF Objects if Applicable (NCAL and SCAL)
INSERT INTO CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST
SELECT MY_RUN_ID, TRIM(T1.BKUP_TABNAME) TableName, TRIM(T2.DatabaseName) DatabaseName
FROM DBC.Tables T2 
JOIN CLARITY_DBA_MAINT.UPG_BKUP_ANALYSIS T1 ON TRIM(T2.TableName)=TRIM(T1.BKUP_TABNAME)
WHERE TRIM(T2.DatabaseName)='MY_TPF_USER_VIEW'
GROUP BY 1,2,3;


-- Tables Found in User View
.EXPORT RESET; 
.EXPORT REPORT FILE = /users/MY_NUID/dbmig/sqlfiles/MY_REL_NAME_perform_querylog_analysis_on_MY_USER_VIEW.sql;

SELECT 'SELECT \* FROM ' || SRC_DBNAME || '."' || SRC_TABNAME || '" SAMPLE 1;' AS QUERY_LIST
FROM CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST
WHERE RUN_ID=MY_RUN_ID AND SRC_DBNAME IN ('MY_TPF_USER_VIEW','MY_TPF_EP_VIEW','MY_USER_VIEW','MY_EP_VIEW','MY_EP_VIEW1','MY_EP_VIEW2');




-- Tables Not Found in User View
.EXPORT RESET; 
.EXPORT REPORT FILE = /users/MY_NUID/dbmig/outfiles/MY_REL_NAME_perform_querylog_analysis_on_rest.dat;

SELECT SRC_DBNAME || '|' || SRC_TABNAME AS ADDITIONAL_BKUP_TABLES
FROM CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST
WHERE RUN_ID=MY_RUN_ID AND SRC_DBNAME IS NOT NULL AND SRC_DBNAME NOT IN ('MY_TPF_USER_VIEW','MY_TPF_EP_VIEW','MY_USER_VIEW','MY_EP_VIEW','MY_EP_VIEW1','MY_EP_VIEW2');


-- Tables Not Found in any database
.EXPORT RESET; 
.EXPORT REPORT FILE = /users/MY_NUID/dbmig/outfiles/MY_REL_NAME_backup_tables_notfound.dat;

SELECT SRC_TABNAME AS TABLES_NOT_FOUND
FROM CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST
WHERE RUN_ID=MY_RUN_ID AND SRC_DBNAME IS  NULL;


-- Tables for reasonable volume check
.EXPORT RESET; 
.EXPORT REPORT FILE = /users/MY_NUID/dbmig/audit/MY_REL_NAME_reasonable_volume.dat;

SELECT TRIM(A.SRC_DBNAME) || '|' || TRIM(A.SRC_TABNAME) AS REASONABLE_VOLUME_LIST
FROM CLARITY_DBA_MAINT.CLARITY_UPG_BKUP_LIST A
JOIN CLARITY_DBA_MAINT.UPG_BKUP_ANALYSIS B ON B.BKUP_TABNAME= A.SRC_TABNAME
AND A.RUN_ID=MY_RUN_ID AND A.SRC_DBNAME IS NOT NULL
AND B.BKUP_SOURCE='Reasonable Volume'
GROUP BY 1;





