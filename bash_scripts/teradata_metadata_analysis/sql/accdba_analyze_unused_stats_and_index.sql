-- INITAL_ANALYSIS

-- Get Data from PDCR Table
DROP TABLE MYCPCO_USHARE.ANALYZE_DBQLOBJTBL;
CREATE MULTISET TABLE MYCPCO_USHARE.ANALYZE_DBQLOBJTBL
(
Logdate DATE NOT NULL,
ProcID   DECIMAL(5,0) NOT NULL,
CollectTimeStamp TIMESTAMP(2) NOT NULL,
QueryID DECIMAL(18,0) NOT NULL,
ObjectDatabaseName VARCHAR(30) NOT NULL,
ObjectTableName VARCHAR(30) NOT NULL,
ObjectColumnName VARCHAR(30) NOT NULL,
ObjectID BYTE(4) NOT NULL,
ObjectNum INTEGER,
ObjectType CHAR(3) NOT NULL,
FreqofUse INTEGER,
TypeofUse BYTEINT
)
PRIMARY INDEX(ObjectDatabaseName,ObjectTableName,ObjectColumnName)
 PARTITION BY (
      RANGE_N(Logdate BETWEEN
          CURRENT_DATE - 150 AND CURRENT_DATE
          EACH INTERVAL '1' DAY));
		  
DELETE FROM MYCPCO_USHARE.ANALYZE_DBQLOBJTBL ALL;
INSERT INTO MYCPCO_USHARE.ANALYZE_DBQLOBJTBL
SELECT * from  PDCRINFO.DBQLOBJTBL_HST 
WHERE ( (typeofuse IN (1,2,4,8,16,32,64) AND ObjectColumnName IS NOT NULL) OR
(ObjectType IN ('Index','Idx')) AND ObjectColumnName IS NOT NULL )
AND TRIM(ObjectDatabaseName) IN ('MYCPPCO2_T','MYCPPCOKP_T','KPBIPCO_T');

COLLECT STATISTICS  COLUMN(ObjectDatabaseName,ObjectTableName,ObjectColumnName),COLUMN(ObjectType), 
                    COLUMN(Logdate), COLUMN(PARTITION) ON MYCPCO_USHARE.ANALYZE_DBQLOBJTBL;

DROP TABLE MYCPCO_USHARE.ANALYZE_DBCSTATS;
CREATE MULTISET TABLE MYCPCO_USHARE.ANALYZE_DBCSTATS
(
DatabaseName VARCHAR(30) NOT NULL,
TableName VARCHAR(30) NOT NULL,
ColumnName VARCHAR(30) NOT NULL,
ColumnList VARCHAR(1000),
StatsId INTEGER NOT NULL,
FieldIdList VARCHAR(1000),
StatsColumnCount SMALLINT
)
PRIMARY INDEX(DatabaseName,TableName,ColumnName);

DROP TABLE MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED;
CREATE MULTISET TABLE MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED
(
DatabaseName VARCHAR(30) NOT NULL,
TableName VARCHAR(30) NOT NULL,
ColumnName VARCHAR(30) NOT NULL,
ColumnList VARCHAR(1000),
StatsId INTEGER NOT NULL,
FieldIdList VARCHAR(1000),
StatsColumnCount SMALLINT
)
PRIMARY INDEX(DatabaseName,TableName,ColumnName);



-- UNUSED_STATS_ANALYSIS

COLLECT STATISTICS COLUMN(DatabaseName,TableName,ColumnName) ON MYCPCO_USHARE.ANALYZE_DBCSTATS;

DELETE FROM MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED ALL;
INSERT INTO MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED
SELECT T1.*
FROM MYCPCO_USHARE.ANALYZE_DBCSTATS T1
LEFT JOIN MYCPCO_USHARE.ANALYZE_DBQLOBJTBL dbql_rows
ON ( dbql_rows.ObjectDatabaseName=T1.DatabaseName AND dbql_rows.ObjectTableName=T1.TableName 
AND dbql_rows.ObjectColumnName=T1.ColumnName)
WHERE dbql_rows.ObjectColumnName IS NULL;

COLLECT STATISTICS  COLUMN(DatabaseName,TableName,ColumnName) ON MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED;
/*
SELECT A.*,
COUNT(FieldIdList) OVER(PARTITION BY DatabaseName,TableName,StatsId) AS ColumnCount
FROM MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED A
WHERE TRIM(A.DatabaseName) IN ('MYCPPCO2_T','MYCPPCOKP_T','KPBIPCO_T')
QUALIFY ColumnCount = A.StatsColumnCount;
*/

SELECT 'DROP STATISTICS ON ' || TRIM(T.DatabaseName) || '.' || TRIM(T.TableName) || ' COLUMN(' || TRIM(ColumnList) || ');' AS DROP_STATS_SQL
FROM
(
	SELECT A.*,
	COUNT(FieldIdList) OVER(PARTITION BY DatabaseName,TableName,StatsId) AS ColumnCount
	FROM MYCPCO_USHARE.ANALYZE_DBCSTATS_UNUSED A
	WHERE TRIM(A.DatabaseName) IN ('MYCPPCO2_T','MYCPPCOKP_T','KPBIPCO_T')
	QUALIFY ColumnCount = A.StatsColumnCount
) T
GROUP BY 1
ORDER BY 1;


-- SECOND_INDEX_ANALYSIS
-- Query To Identify Unused Secondary Indexes. Checking only NON-UNIQUE Secondary Index

/*
SELECT TRIM(DatabaseName),TRIM(TableName),TRIM(ColumnName), TRIM(IndexName),UniqueFlag,IndexType
FROM DBC.Indices A
LEFT JOIN MYCPCO_USHARE.ANALYZE_DBQLOBJTBL B ON B.ObjectDatabaseName=A.DatabaseName
AND B.ObjectTableName=A.TableName
AND B.ObjectColumnName=A.ColumnName
AND B.ObjectType IN ('Idx','Index')
WHERE TRIM(A.DatabaseName) IN ('MYCPPCO2_T','MYCPPCOKP_T','KPBIPCO_T')
AND A.UniqueFlag='N' AND A.IndexType IN ( 'S','V','H','O','I')
AND B.ObjectColumnName IS NULL;
*/


