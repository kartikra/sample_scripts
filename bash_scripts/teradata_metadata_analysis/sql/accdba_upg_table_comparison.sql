----------------------- TABLE PROPERTIES     

		SELECT 
		CAST (1 AS INTEGER) AS ERROR_NUM,
		CAST('TABLE PROPERTIES BAD - CHECK ' AS VARCHAR(50)) AS INFORMATION,				
		CAST(SRC.DATABASENAME AS VARCHAR(30)) AS DATABASENAME, 
		CAST(SRC.TABLENAME AS VARCHAR(30)) AS TABLENAME,
		CAST('' AS VARCHAR(30)) AS ColumnName
		FROM		
		DBC.TABLES SRC  , DBC.TABLES TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
			AND	
		(  			COALESCE(TRIM(TRG.TABLEKIND),' ') <>COALESCE(TRIM( SRC.TABLEKIND),' ')
				OR COALESCE(TRIM(TRG.PROTECTIONTYPE),' ') <>COALESCE(TRIM(SRC.PROTECTIONTYPE),' ')
				OR COALESCE(TRIM(TRG.JOURNALFLAG),' ') <>COALESCE(TRIM( SRC.JOURNALFLAG),' ')
				OR COALESCE(TRIM(TRG.COMMENTSTRING),' ') <>COALESCE(TRIM( SRC.COMMENTSTRING),' ')
		) 

		UNION

		----------------------- COLUMN COUNT     
		
		SELECT 	 
				CAST (2 AS INTEGER),
				CAST('COLUMN COUNT  BAD - CHECK' AS VARCHAR(50))   AS INFORMATION, 
				CAST(SRC.DATABASENAME AS VARCHAR(30)),
				CAST(SRC.TABLENAME AS VARCHAR(30)), 
				CAST ('' AS VARCHAR(30))
		FROM	
		DBC.COLUMNS SRC,
		DBC.COLUMNS TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
		HAVING	 SUM(SRC.COLUMNID) <> SUM(TRG.COLUMNID) 
		GROUP BY 1,2,3,4,5

		UNION	
		
		----------------------- COLUMN DETAILS     
		
		SELECT 	3,'COLUMN PROPERTIES BAD - CHECK ' AS INFORMATION, 
				SRC.DATABASENAME,
				SRC.TABLENAME, SRC.ColumnName
		FROM	
		DBC.COLUMNS SRC,
		DBC.COLUMNS TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
			AND	SRC.COLUMNID=TRG.COLUMNID
			AND	
		(  COALESCE(TRIM(TRG.COLUMNFORMAT),' ') <>COALESCE(TRIM( SRC.COLUMNFORMAT),' ')
			OR	COALESCE(TRIM(TRG.COLUMNTITLE),' ') <>COALESCE(TRIM( SRC.COLUMNTITLE),' ')
			OR	COALESCE(TRIM(TRG.COLUMNTYPE),' ') <>COALESCE(TRIM(SRC.COLUMNTYPE),' ')
			OR	 TRG.COLUMNLENGTH<>SRC.COLUMNLENGTH
			OR	 COALESCE(TRIM( TRG.DEFAULTVALUE),' ') <>COALESCE(TRIM( SRC.DEFAULTVALUE),' ')
			OR	 COALESCE(TRIM( TRG.NULLABLE),' ') <>COALESCE(TRIM(SRC.NULLABLE),' ')
			OR	 COALESCE(TRIM( TRG.COMMENTSTRING),' ') <>COALESCE(TRIM(SRC.COMMENTSTRING),' ')
			OR	 TRG.DECIMALTOTALDIGITS<>SRC.DECIMALTOTALDIGITS
			OR	 TRG.DECIMALFRACTIONALDIGITS<>SRC.DECIMALFRACTIONALDIGITS
			OR	 COALESCE(TRIM(TRG.UPPERCASEFLAG),' ') <>COALESCE(TRIM(SRC.UPPERCASEFLAG),' ')
			OR	 COALESCE(TRIM(TRG.COMPRESSIBLE),' ') <>COALESCE(TRIM(SRC.COMPRESSIBLE),' ')
			OR	 COALESCE(TRIM(TRG.COMPRESSVALUE),' ') <>COALESCE(TRIM(SRC.COMPRESSVALUE),' ')
			OR	 COALESCE(TRIM(TRG.COLUMNCONSTRAINT),' ') <>COALESCE(TRIM(SRC.COLUMNCONSTRAINT),' ')
			OR	 TRG.CONSTRAINTCOUNT<>SRC.CONSTRAINTCOUNT
			OR	 COALESCE(TRIM( TRG.COMPRESSVALUELIST),' ') <>COALESCE(TRIM(SRC.COMPRESSVALUELIST),' ')
		)			
		
		UNION
		
		SELECT 4 AS ERROR_NUM,  'COLUMN MISSING IN TGT ' AS INFORMATION,
		'VAR_SRC_DB' AS DATABASENAME, 'VAR_SRC_TB' AS TABLENAME, T.ColumnName
		FROM
		(	SELECT 	SRC.ColumnName FROM	DBC.COLUMNS SRC
			WHERE	SRC.TABLENAME = 'VAR_SRC_TB' AND	 SRC.DATABASENAME = 'VAR_SRC_DB'	
			MINUS
			SELECT TRG.ColumnName FROM	DBC.COLUMNS TRG
			WHERE	TRG.TABLENAME = 'VAR_TRG_TB' AND	 TRG.DATABASENAME = 'VAR_TRG_DB'	
		) T
		
		UNION
		
		SELECT 4 AS ERROR_NUM,  'COLUMN MISSING IN SRC ' AS INFORMATION,
		'VAR_TRG_DB' AS DATABASENAME, VAR_TRG_TB AS TABLENAME, T.ColumnName
		FROM
		(	SELECT TRG.ColumnName FROM	DBC.COLUMNS TRG
			WHERE	TRG.TABLENAME = 'VAR_TRG_TB' AND	 TRG.DATABASENAME = 'VAR_TRG_DB'	
			MINUS
			SELECT 	SRC.ColumnName FROM	DBC.COLUMNS SRC
			WHERE	SRC.TABLENAME = 'VAR_SRC_TB' AND	 SRC.DATABASENAME = 'VAR_SRC_DB'	
		) T
		

		UNION
		 
		--> INDEX Count  LEVEL DETAILS 

		SELECT 	5,'INDEX Count BAD - CHECK' AS INFORMATION, SRC.DATABASENAME,
				SRC.TABLENAME, ''
		FROM	
		DBC.INDICES SRC,DBC.INDICES TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
		HAVING	 SUM(SRC.COLUMNPOSITION) <> SUM(TRG.COLUMNPOSITION) 
		GROUP BY 1,2,3,4,5
		

		UNION	
		
		--> If the Index count is diffrent then fix it, it will correct the Index properties too,
		--> Usually Columnname comparision creates this issue 
		--> INDEX LEVEL DETAILS 

		SELECT 	 6,'INDEX PROPERTIES BAD - CHECK' AS INFORMATION, 
			SRC.DATABASENAME,
				SRC.TABLENAME, ''
		FROM	
		DBC.INDICES SRC,  DBC.INDICES TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
			AND	SRC.COLUMNPOSITION = TRG.COLUMNPOSITION
			AND	SRC.IndexNumber = TRG.IndexNumber
			AND	
		(  		  COALESCE(TRG.INDEXNAME,' ') <> COALESCE(SRC.INDEXNAME,' ')
				OR COALESCE(TRIM(TRG.INDEXTYPE),' ') <> COALESCE(TRIM(SRC.INDEXTYPE),' ')
				OR COALESCE(TRIM(TRG.UNIQUEFLAG),' ') <> COALESCE(TRIM( SRC.UNIQUEFLAG),' ')
				OR COALESCE(TRIM(TRG.COLUMNNAME),' ') <> COALESCE(TRIM( SRC.COLUMNNAME),' ')
				OR COALESCE(TRIM(TRG.COLUMNPOSITION),' ') <> COALESCE(TRIM( SRC.COLUMNPOSITION),' ')
				OR COALESCE(TRIM(TRG.UNIQUEORPK),' ') <> COALESCE(TRIM( SRC.UNIQUEORPK),' ')
				OR COALESCE(TRIM(TRG.VTCONSTRAINTTYPE),' ') <> COALESCE(TRIM( SRC.VTCONSTRAINTTYPE),' ')						
		) 

		UNION	
		
		-------------------------------------------------------
		---> PARTITION LEVEL DETAILS
		
		SELECT 	   7,'PARTITION PROPERTIES BAD - CHECK' AS INFORMATION, 
		SRC.DATABASENAME,
				SRC.TABLENAME, ''
		FROM	DBC.INDEXCONSTRAINTS SRC, DBC.INDEXCONSTRAINTS TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'

			AND	
		(  			COALESCE(TRIM(TRG.INDEXNAME),' ') <>COALESCE(TRIM( SRC.INDEXNAME),' ')
				OR COALESCE(TRIM(TRG.INDEXNUMBER),' ') <>COALESCE(TRIM(SRC.INDEXNUMBER),' ')
				OR COALESCE(TRIM(TRG.CONSTRAINTTYPE),' ') <> COALESCE(TRIM( SRC.CONSTRAINTTYPE),' ')
				OR COALESCE(TRIM(TRG.CONSTRAINTTEXT),' ') <> COALESCE(TRIM( SRC.CONSTRAINTTEXT),' ')
		)


		UNION

		----------------------- STATS COUNT     
		
		SELECT 	 
				CAST (8 AS INTEGER),
				CAST('STATS COUNT  BAD - CHECK' AS VARCHAR(50))   AS INFORMATION, 
				CAST(SRC.DATABASENAME AS VARCHAR(30)),
				CAST(SRC.TABLENAME AS VARCHAR(30)), 
				CAST ('' AS VARCHAR(30))
		FROM	
		DBC.STATSV SRC,
		DBC.STATSV TRG
		WHERE	
		SRC.TABLENAME = 'VAR_SRC_TB'
			AND	 SRC.DATABASENAME = 'VAR_SRC_DB'
			AND	TRG.TABLENAME ='VAR_TRG_TB'
			AND	 TRG.DATABASENAME = 'VAR_TRG_DB'
		HAVING	 COUNT(SRC.StatsId) <> COUNT(TRG.StatsId) 
		GROUP BY 1,2,3,4,5


		
		UNION	
		
		-------------------------------------------------------
		---> STATS  DETAILS
		
		SELECT 	   9,'STATS MISSING IN TGT' AS INFORMATION, 
		'VAR_SRC_DB',
		'VAR_SRC_TB', ''
		FROM
		(		
			SELECT 
			--RANK() OVER (PARTITION BY SRC.DATABASENAME, SRC.TABLENAME
			--ORDER BY  COALESCE(TRIM( SRC.StatsId),' ')) StatsPos, 
			COALESCE(TRIM( SRC.COLUMNNAME),' ') COLUMNNAME
			FROM DBC.StatsV SRC
			WHERE TRIM(SRC.DatabaseName)='VAR_SRC_DB' AND TRIM(SRC.TableName)='VAR_SRC_TB'

			MINUS

			SELECT 
			--RANK() OVER (PARTITION BY TGT.DATABASENAME, TGT.TABLENAME
			--ORDER BY  COALESCE(TRIM( TGT.StatsId),' ')) StatsPos, 
			COALESCE(TRIM( TGT.COLUMNNAME),' ') COLUMNNAME
			FROM DBC.StatsV TGT
			WHERE TRIM(TGT.DatabaseName)='VAR_TRG_DB' AND TRIM(TGT.TableName)='VAR_TRG_TB'
		) TEMP
		

		UNION
		
		SELECT 	   9,'STATS MISSING IN SRC' AS INFORMATION, 
		'VAR_TRG_DB',
		'VAR_TRG_TB', ''
		FROM
		(		
			SELECT 
			--RANK() OVER (PARTITION BY TGT.DATABASENAME, TGT.TABLENAME
			--ORDER BY  COALESCE(TRIM( TGT.StatsId),' ')) StatsPos, 
			COALESCE(TRIM( TGT.COLUMNNAME),' ') COLUMNNAME
			FROM DBC.StatsV TGT
			WHERE TRIM(TGT.DatabaseName)='VAR_TRG_DB' AND TRIM(TGT.TableName)='VAR_TRG_TB'
			
			MINUS
			
			SELECT 
			--RANK() OVER (PARTITION BY SRC.DATABASENAME, SRC.TABLENAME
			--ORDER BY  COALESCE(TRIM( SRC.StatsId),' ')) StatsPos, 
			COALESCE(TRIM( SRC.COLUMNNAME),' ') COLUMNNAME
			FROM DBC.StatsV SRC
			WHERE TRIM(SRC.DatabaseName)='VAR_SRC_DB' AND TRIM(SRC.TableName)='VAR_SRC_TB'
			
		) TEMP;