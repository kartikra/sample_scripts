SELECT COUNT(*) AS NEW_TABLE_COUNT
FROM DBC.TablesV WHERE DatabaseName='MYCPSC_UPG_AK_TAB_ADD';

SELECT COUNT(*) AS EXISTING_ALL_TABLE_COUNT
FROM DBC.TablesV WHERE DatabaseName LIKE ANY ('MYCPSC_UPG_AK_%_CHANGE','MYCPSC_UPG_AK_TAB_CHANGE_%');

SELECT COUNT(*) AS EXISTING_DEPLOY_TABLE_COUNT
FROM DBC.TablesV WHERE DatabaseName LIKE  'MYCPSC_UPG_AK_TAB_CHANGE_%'

SELECT
  TRIM(A.AUDIT_TABLE_NAME)
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT))
  || ',' || TRIM(CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT) - CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(B.AUDIT_DATABASE_NAME) 
  || ',' || TRIM(A.AUDIT_DATABASE_NAME)
AS MIGRATION_REPORT

FROM CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT A
JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT B ON A.RUN_ID=B.RUN_ID 
AND B.AUDIT_ID - A.AUDIT_ID=100
 AND B.RUN_ID=4
 AND B.AUDIT_ID=204
AND A.AUDIT_TABLE_NAME=B.AUDIT_TABLE_NAME;


SELECT
  TRIM(A.AUDIT_TABLE_NAME)
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT))
  || ',' || TRIM(CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT) - CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(B.AUDIT_DATABASE_NAME) 
  || ',' || TRIM(C.AUDIT_DATABASE_NAME)
  || ',' || TRIM(CAST(C.AUDIT_VALUE AS BIGINT))
  || ',' || TRIM(CAST(C.AUDIT_VALUE AS BIGINT) - CAST(A.AUDIT_VALUE AS BIGINT)) 
AS CUTOVER_REPORT
  
FROM CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT A
JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT B ON A.RUN_ID=B.RUN_ID 
AND B.AUDIT_ID - A.AUDIT_ID=100
 AND B.RUN_ID=4
 AND B.AUDIT_ID=204
AND A.AUDIT_TABLE_NAME=B.AUDIT_TABLE_NAME

JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT C ON A.RUN_ID=B.RUN_ID 
AND C.AUDIT_ID - B.AUDIT_ID=100
 AND C.RUN_ID=4
 AND C.AUDIT_ID=304
AND B.AUDIT_TABLE_NAME=C.AUDIT_TABLE_NAME

;



SELECT
  TRIM(A.AUDIT_TABLE_NAME)
  || ',' || TRIM(B.AUDIT_DATABASE_NAME) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT))
  || ',' || TRIM(A.AUDIT_DATABASE_NAME)
  || ',' || TRIM(CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT) - CAST(A.AUDIT_VALUE AS BIGINT)) 

AS BACKUP_TABLE_COUNT_REPORT

FROM CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT A
JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT B ON A.RUN_ID=B.RUN_ID 
AND B.AUDIT_ID - A.AUDIT_ID=100
 AND B.RUN_ID=4
 AND B.AUDIT_ID=201
AND A.AUDIT_TABLE_NAME=B.AUDIT_TABLE_NAME;



SELECT
  TRIM(A.AUDIT_TABLE_NAME)
  || ',' || TRIM(B.AUDIT_DATABASE_NAME) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT))
  || ',' || TRIM(A.AUDIT_DATABASE_NAME)
  || ',' || TRIM(CAST(A.AUDIT_VALUE AS BIGINT)) 
  || ',' || TRIM(CAST(B.AUDIT_VALUE AS BIGINT) - CAST(A.AUDIT_VALUE AS BIGINT)) 

AS UPGR_VIEW_COUNT_REPORT

FROM CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT A
JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT B ON A.RUN_ID=B.RUN_ID 
AND B.AUDIT_ID - A.AUDIT_ID=100
 AND B.RUN_ID=4
 AND B.AUDIT_ID=202
AND B.AUDIT_TABLE_NAME='UPGR_' || A.AUDIT_TABLE_NAME
AND TRIM(B.AUDIT_DATABASE_NAME)=TRIM(A.AUDIT_DATABASE_NAME);




SELECT
  TRIM(A.AUDIT_TABLE_NAME)
  || ',' || TRIM(A.AUDIT_DATABASE_NAME) 
  || ',' || TRIM(CAST(COALESCE(A.AUDIT_VALUE,0) AS BIGINT)) 
  || ',' || CASE WHEN B.AUDIT_VALUE IS NULL THEN '' ELSE TRIM(CAST(COALESCE(B.AUDIT_VALUE,0) AS BIGINT)) END
  || ',' || CASE WHEN B.AUDIT_VALUE IS NULL THEN '' ELSE TRIM(CAST(COALESCE(A.AUDIT_VALUE,0) AS BIGINT)- CAST(COALESCE(B.AUDIT_VALUE,0) AS BIGINT)) END

AS REASONABLE_VOLUME_REPORT

FROM CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT A
LEFT JOIN CLARITY_DBA_MAINT.CLARITY_UPG_AUDIT B ON A.RUN_ID=B.RUN_ID 
AND (B.AUDIT_ID - A.AUDIT_ID=100) AND A.AUDIT_TABLE_NAME=B.AUDIT_TABLE_NAME

 WHERE  A.RUN_ID=4 AND A.AUDIT_ID=105;


